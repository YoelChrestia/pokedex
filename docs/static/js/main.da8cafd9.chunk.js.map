{"version":3,"sources":["contexts/favoriteContext.jsx","components/Navbar.jsx","components/SearchBar.jsx","components/ArrowsSvg.jsx","components/Pagination.jsx","components/Pokemon.jsx","components/Pokedex.jsx","api.js","App.js","index.js"],"names":["FavoriteContext","React","createContext","favoritePokemons","updateFavoritePokemons","id","FavoriteProvider","Provider","Navbar","useContext","src","alt","className","length","SearchBar","props","onSearch","useState","search","setSearch","handleSearch","e","a","placeholder","type","onChange","target","value","onClick","LeftArrow","xmlns","viewBox","width","height","d","fill","stroke","strokeLinecap","strokeLinejoin","RightArrow","Pagination","onLeftClick","onRightClick","page","totalPages","Pokemon","pokemon","heart","includes","name","sprites","front_default","types","map","idx","preventDefault","Pokedex","pokemons","setPage","total","loading","nextPage","Math","max","min","searchPokemon","url","fetch","res","json","data","getPokemons","limit","offset","getPokemonData","App","localStorageKey","setPokemons","setTotal","setLoading","favorites","setFavorites","notFound","setNotFound","searching","setSearching","fetchPokemons","promises","results","Promise","all","ceil","count","useEffect","JSON","parse","window","localStorage","getItem","loadFavoritePokemons","result","updated","isFavorite","indexOf","splice","push","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da8cafd9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FavoriteContext = React.createContext({\r\n    favoritePokemons: [],\r\n    updateFavoritePokemons: (id) => null\r\n})\r\n\r\nexport const FavoriteProvider = FavoriteContext.Provider;\r\n\r\nexport default FavoriteContext;\r\n","import React from 'react';\r\n\r\nimport {useContext} from 'react';\r\nimport FavoriteContext from '../contexts/favoriteContext';\r\n\r\nconst Navbar = () => {\r\n    const {favoritePokemons} = useContext(FavoriteContext);\r\n\r\n    let imgUrl = \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\"\r\n\r\n    return(\r\n        <nav>\r\n            <div />\r\n            <div>\r\n            <img src={imgUrl} alt=\"pokeapi-logo\"\r\n            className=\"navbar-img\"\r\n            >\r\n            </img>\r\n            </div>\r\n            <div>ðŸ’– {favoritePokemons.length}</div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const {onSearch} = props;\r\n    const[search,setSearch] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n        if(e.target.value.length === 0) {\r\n            onSearch(null);\r\n        }\r\n    }\r\n\r\n    const handleSearch = async (e) => {\r\n        onSearch(search);\r\n    }\r\n\r\n    return (\r\n    <div className=\"searchbar-container\">\r\n        <div className=\"searchbar\">\r\n            <input placeholder=\"Buscar Pokemon...\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            ></input>\r\n        </div>\r\n         <div className=\"searchbar-btn\">\r\n            <button onClick={handleSearch}>Buscar</button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nexport const LeftArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M11.5 14.5l-4-4 4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RightArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M9.5 14.5l4-4-4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};","import React from 'react';\r\nimport { LeftArrow, RightArrow } from \"./ArrowsSvg\";\r\n\r\nconst Pagination = (props) => {\r\n\r\n    const {onLeftClick, onRightClick, page, totalPages} = props;\r\n\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button className=\"pagination-btn\" onClick={onLeftClick}>\r\n        <div className=\"icon\">\r\n          <LeftArrow />\r\n        </div>\r\n        </button>\r\n      <div>\r\n        {page} de {totalPages}\r\n      </div>\r\n        <button className=\"pagination-btn\" onClick={onRightClick}>\r\n        <div className=\"icon\">\r\n          <RightArrow />\r\n        </div>\r\n         </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport FavoriteContext from '../contexts/favoriteContext';\r\nimport {useContext} from 'react';\r\n\r\nconst Pokemon = (props) => {\r\n    const {pokemon} = props;\r\n    const {favoritePokemons, updateFavoritePokemons} = useContext(FavoriteContext);\r\n\r\n    const redHeart = `ðŸ’–`;\r\n    const blackHeart = `ðŸ’™`;\r\n    const heart= favoritePokemons.includes(pokemon.name) ? redHeart : blackHeart;\r\n\r\n    const clickHeart = (e) =>{\r\n        e.preventDefault();\r\n        updateFavoritePokemons(pokemon.name);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokemon-card\">\r\n            <div className=\"pokemon-img-container\">\r\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} className=\"pokemon-img\"/>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"card-top\">\r\n                    <h3>{pokemon.name}</h3>\r\n                    <div>#{pokemon.id}</div>\r\n                </div>\r\n                <div className=\"card-bottom\">\r\n                    <div className=\"pokemon-type\">{pokemon.types.map((type, idx) => {\r\n                        return <div key={idx} className=\"pokemon-type-text\">{type.type.name}</div>\r\n                    })}</div>\r\n                    <button onClick={clickHeart}>\r\n                    <div className=\"pokemon-favorite\">{heart}</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;","import React from 'react';\r\nimport Pagination from './Pagination';\r\nimport Pokemon from './Pokemon'\r\n\r\nconst Pokedex = (props) => {\r\n\r\n    const {pokemons, page, setPage, total, loading} = props;\r\n\r\n    const lastPage = () => {\r\n        const nextPage = Math.max(page - 1, 0);\r\n        setPage(nextPage);\r\n    };\r\n\r\n    const nextPage = () => {\r\n        const nextPage = Math.min(page + 1, total - 1);\r\n        setPage(nextPage);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pokedex\">\r\n            <div className=\"header\">\r\n                <h1>Pokedex</h1>\r\n                <Pagination \r\n                page={page + 1}\r\n                totalPages={total}\r\n                onLeftClick={lastPage}\r\n                onRightClick={nextPage}\r\n                />\r\n            </div>\r\n            {loading ?\r\n            <div className=\"loading\">Cargando Pokemones..</div> :\r\n            <div className=\"pokedex-grid\">\r\n                {pokemons.map((pokemon, idx) => {\r\n                    return (\r\n                    <Pokemon pokemon={pokemon} key={pokemon.name}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pokedex;","export const searchPokemon = async (pokemon) => {\r\n    try{\r\n        let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        return data;\r\n\r\n    }catch(err){}\r\n}\r\n\r\nexport const getPokemons = async (limit=25, offset=0) => {\r\n    try{\r\n        let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n        const res = await fetch(url);\r\n        const data = res.json()\r\n        return data;\r\n\r\n    }catch(err){}\r\n}\r\n\r\nexport const getPokemonData = async (url) => {\r\n    try{\r\n        const res = await fetch(url);\r\n        const data = res.json()\r\n        return data;\r\n    }catch(err){}\r\n}","import React from 'react';\nimport './styles.css'\nimport Navbar from './components/Navbar';\nimport SearchBar from './components/SearchBar';\nimport Pokedex from './components/Pokedex';\nimport {useState, useEffect} from 'react';\nimport {getPokemonData, getPokemons, searchPokemon} from './api'\nimport { FavoriteProvider } from './contexts/favoriteContext';\n\nexport default function App() {\n\n  const localStorageKey = \"favorite_pokemon\";\n\n  const [pokemons,setPokemons] = useState([]);\n  const [page,setPage] = useState(0);\n  const [total,setTotal] = useState(0);\n  const [loading,setLoading] = useState(true);\n  const [favorites,setFavorites] = useState([]);\n  const [notFound,setNotFound] = useState(false);\n  const [searching,setSearching] = useState(false);\n\n\n  const fetchPokemons = async () => {\n      try{\n        setLoading(true);\n        const data= await getPokemons(25, 25 *page);\n\n        const promises = data.results.map(async (pokemon) => {\n          return await getPokemonData(pokemon.url);\n        })\n\n        const results = await Promise.all(promises);\n        setPokemons(results);\n        setLoading(false);\n        setTotal(Math.ceil(data.count / 25));\n        setNotFound(false);\n      } catch(error){ }\n  }\n\n  const loadFavoritePokemons = () => {\n    const pokemons = JSON.parse(window.localStorage.getItem(localStorageKey)) || [];\n\n    setFavorites(pokemons);\n  }\n\n  useEffect(() =>{\n    loadFavoritePokemons();\n  },[])\n\n  useEffect(() =>{\n    if(!searching){\n      fetchPokemons();\n    }\n  },[page]);\n\n  const updateFavoritePokemons = (name) => {\n    const updated = [...favorites]\n    const isFavorite = updated.indexOf(name);\n    if(isFavorite >= 0){\n      updated.splice(isFavorite, 1);\n    }else{\n      updated.push(name);\n    }\n\n    setFavorites(updated);\n    window.localStorage.setItem(localStorageKey, JSON.stringify(updated));\n  }\n\n  const onSearch = async (pokemon) => {\n    if(!pokemon){\n      return fetchPokemons();\n    }\n\n    setLoading(true);\n    setNotFound(false);\n    setSearching(true);\n    const result = await searchPokemon(pokemon);\n\n    if(!result){\n      setNotFound(true);\n      setLoading(false);\n      return;\n    }else{\n      setPokemons([result]);\n      setPage(0);\n      setTotal(1);\n    }\n\n    setLoading(false);\n    setSearching(false);\n  }\n\n  return (\n    <FavoriteProvider value={\n      {favoritePokemons: favorites,\n       updateFavoritePokemons: updateFavoritePokemons\n       }}>\n    <div>\n      <Navbar />\n      <div className=\"App\">\n      <SearchBar onSearch={onSearch}/>\n      {notFound ? \n      <div className=\"notfound\">No se encontro el Pokemon que buscabas</div>\n        : (\n        <Pokedex\n          loading={loading}\n          pokemons={pokemons}\n          page={page}\n          setPage={setPage}\n          total={total}\n          />\n        )}\n      </div>      \n    </div>\n    <footer className=\"footer\">Creado por Chrestia Yoel</footer>\n    </FavoriteProvider>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}